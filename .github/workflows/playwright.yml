name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      spec:
        description: 'Select the spec to run (or All)'
        required: true
        type: choice
        default: 'windowsandframes.spec.ts'
        options:
          - example.spec.ts
          - playgrounddoc.spec.ts
          - playgroundDynamic.spec.ts
          - qaplayground.spec.ts
          - screener.spec.ts
          - All

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit, Microsoft Edge]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Install Allure CLI and single-file packager
        run: |
          npm install -g allure-commandline --save-dev
          npm install allure-single-html-file-js --save-dev

      - name: Run Playwright tests on ${{ matrix.browser }}
        run: |
          if [ "${{ github.event.inputs.spec }}" = "All" ]; then
            npx playwright test --project=${{ matrix.browser }} --reporter=line,allure-playwright --output=playwright-report
          else
            npx playwright test tests/${{ github.event.inputs.spec }} --project=${{ matrix.browser }} --reporter=line,allure-playwright --output=playwright-report
          fi
        continue-on-error: true

      - name: Generate Allure HTML Report
        if: always()
        run: |
          mkdir -p allure-report
          allure generate allure-results --clean -o allure-report

      - name: Save summary and upload results
        if: always()
        run: |
          PASSED=$(node -e "let r=require('./allure-report/widgets/summary.json');console.log(r.statistic.passed)")
          FAILED=$(node -e "let r=require('./allure-report/widgets/summary.json');console.log(r.statistic.failed)")
          TOTAL=$(($PASSED + $FAILED))
          echo "${{ matrix.browser }}: $PASSED/$TOTAL" > results.txt

      - name: Upload Allure artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-${{ matrix.browser }}
          path: |
            allure-results
            allure-report
            results.txt

  select-browser:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Download all results
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Find browser with highest pass rate
        id: find_best
        run: |
          best_browser=""
          best_rate=0

          # Loop through results.txt of all browsers
          for file in ./artifacts/allure-*/results.txt; do
            # Extract browser name from folder name
            browser=$(basename $(dirname "$file") | cut -d'-' -f2)

            # Read pass and total counts from results.txt file
            pass=$(cut -d':' -f2 "$file" | cut -d'/' -f1 | xargs)
            total=$(cut -d'/' -f2 "$file" | xargs)

            # Calculate pass rate if total is greater than zero
            if [ "$total" -gt 0 ]; then
              rate=$(awk "BEGIN { printf \"%.4f\", $pass / $total }")

              # Update if this is the highest pass rate so far
              if (( $(echo "$rate > $best_rate" | bc -l) )); then
                best_rate=$rate
                best_browser=$browser
              fi
            fi
          done

          echo "Best browser: $best_browser with pass rate $best_rate"
          echo "best=$best_browser" >> $GITHUB_OUTPUT

      - name: Copy best browser's report for final publication
        run: |
          cp -r ./artifacts/allure-${{ steps.find_best.outputs.best }}/allure-report ./allure-report

      - name: Install Allure CLI and single-file packager
        run: |
          npm install -g allure-commandline --save-dev
          npm install allure-single-html-file-js --save-dev

      - name: Combine into Single Allure HTML File
        run: |
          node ./node_modules/allure-single-html-file-js/combine.js allure-report
          mv allure-report/complete.html allure-report.html
          echo "âœ… Combined Allure HTML generated: allure-report.html"

      - name: Upload Single Allure HTML File
        uses: actions/upload-artifact@v4
        with:
          name: Allure-Report-Single-File
          path: allure-report.html
