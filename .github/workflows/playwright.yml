name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      spec:
        description: 'Select the spec to run (or All)'
        required: true
        type: choice
        default: 'windowsandframes.spec.ts'
        options:
          - example.spec.ts
          - playgrounddoc.spec.ts
          - playgroundDynamic.spec.ts
          - qaplayground.spec.ts
          - screener.spec.ts
          - All

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit, edge]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Install Allure CLI and single-file packager
        run: |
          npm install -g allure-commandline --save-dev
          npm install allure-single-html-file-js --save-dev

      - name: Run Playwright tests on ${{ matrix.browser }}
        run: |
          if [ "${{ github.event.inputs.spec }}" = "All" ]; then
            npx playwright test --project=${{ matrix.browser }} --reporter=line,allure-playwright --output=playwright-report
          else
            npx playwright test tests/${{ github.event.inputs.spec }} --project=${{ matrix.browser }} --reporter=line,allure-playwright --output=playwright-report
          fi
        continue-on-error: true

      - name: Generate Allure HTML Report
        if: always()
        run: |
          mkdir -p allure-report
          allure generate allure-results --clean -o allure-report

      - name: Save summary and upload results
        if: always()
        run: |
          PASSED=$(node -e "let r=require('./allure-report/widgets/summary.json');console.log(r.statistic.passed)")
          FAILED=$(node -e "let r=require('./allure-report/widgets/summary.json');console.log(r.statistic.failed)")
          TOTAL=$(($PASSED + $FAILED))
          echo "${{ matrix.browser }}: $PASSED/$TOTAL" > results.txt

      - name: Upload All
